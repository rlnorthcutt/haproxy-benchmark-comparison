version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: benchmark-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ntexdb
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 12

  ntex-app-1:
    build:
      context: ./ntex-app
      dockerfile: Dockerfile
    container_name: benchmark-ntex-app-1
    environment:
      HTTP_PORT: "8080"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PWD: password
      POSTGRES_DB: ntexdb
      POSTGRES_POOL: "16"
    depends_on:
      postgres:
        condition: service_healthy

  ntex-app-2:
    build:
      context: ./ntex-app
      dockerfile: Dockerfile
    container_name: benchmark-ntex-app-2
    environment:
      HTTP_PORT: "8080"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      POSTGRES_PWD: password
      POSTGRES_DB: ntexdb
      POSTGRES_POOL: "16"
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:1.27-alpine
    container_name: benchmark-nginx
    volumes:
      - ./nginx/local.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ntex-app-1
      - ntex-app-2
    ports:
      - "8081:80"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: benchmark-nginx-exporter
    command:
      - --nginx.scrape-uri=http://benchmark-nginx/nginx_status
    depends_on:
      - nginx

  haproxy:
    image: haproxy:3.0-alpine
    container_name: benchmark-haproxy
    volumes:
      - ./haproxy/local.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - ntex-app-1
      - ntex-app-2
    ports:
      - "8082:80"

  traefik:
    image: traefik:3.1
    container_name: benchmark-traefik
    command:
      - --providers.file.filename=/etc/traefik/dynamic.yaml
      - --entryPoints.web.address=:80
      - --accesslog=false
      - --log.level=ERROR
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addRoutersLabels=true
      - --metrics.prometheus.entryPoint=metrics
      - --entryPoints.metrics.address=:9100
    volumes:
      - ./traefik/local.yaml:/etc/traefik/dynamic.yaml:ro
    depends_on:
      - ntex-app-1
      - ntex-app-2
    ports:
      - "8083:80"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: benchmark-cadvisor
    command:
      - --docker_only
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: benchmark-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
      - haproxy
      - nginx-exporter
      - traefik

  grafana:
    image: grafana/grafana:11.4.0
    container_name: benchmark-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./dashboard.json:/var/lib/grafana/dashboards/load-balancer-benchmark.json:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

networks:
  default:
    name: benchmark
